# Add deno completions to search path
if [[ ":$FPATH:" != *":/home/solo/.zsh/completions:"* ]]; then export FPATH="/home/solo/.zsh/completions:$FPATH"; fi
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

# eval "$(oh-my-posh init zsh)"
# eval "$(starship init zsh)"
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
#
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git vi-mode tmux fzf-tab zsh-syntax-highlighting zsh-autosuggestions)

fpath+=${ZDOTDIR:-~}/.zsh_functions
fpath+=${CUSTOM_ZSH_COMPLETIONS:-~}/completions


# Check if we are in a container
function is_container() {
    if [ -f /run/.containerenv ] || [ -f /.dockerenv ]; then
        echo "($(hostname)) "
    fi
}


function get_container_name() {
    if [ -f /run/.containerenv ]; then
        # For Toolbox and Distrobox
        container_name=$(grep -oP '(?<=name=").*(?=")' /run/.containerenv)
        echo "(📦️ $container_name) "
    elif [ -f /.dockerenv ]; then
        # For generic Docker containers
        echo "(📦️ Docker) "
    fi
}

# Function to detect Distrobox or Toolbox
distrobox_toolbox_prompt() {
  if [[ -n "$DISTROBOX_NAME" ]]; then
    echo "%F{blue}[Distrobox:$DISTROBOX_NAME]%f"
  elif [[ -n "$TOOLBOX_PATH" ]]; then
    echo "%F{green}[Toolbox]%f"
  fi
}

# source $HOME/antigen.zsh
source /usr/share/antigen.zsh
# source /home/linuxbrew/.linuxbrew/share/antigen/antigen.zsh
#
export ANTIGEN_LOG=~/antigen.log

antigen use oh-my-zsh
# antigen theme cloud
# antigen theme lambda
# antigen theme lambda
antigen theme ~/.antigen/themes lambda.zsh-theme

antigen bundle git
antigen bundle vi-mode
antigen bundle tmux
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle Aloxaf/fzf-tab

antigen apply

# fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

# source $ZSH/oh-my-zsh.sh

# User configuration

export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
#
# NEOVIM
alias v="nvim"
alias vi="nvim"
alias vim="nvim"
alias avim="NVIM_APPNAME=astronvim nvim"

export PATH="$HOME/.local/share/JetBrains/Toolbox/scripts:$PATH"

[[ -r "/usr/share/z/z.sh" ]] && source /usr/share/z/z.sh

# Load Angular CLI autocompletion.
# source <(ng completion script)

# NODE
export NODE_OPTIONS=--max-old-space-size=8192

# Termbin
alias tb="nc termbin.com 9999"

# Go back
# alias -- -="cd -"

# Clipboard
alias cb="xsel --clipboard"

alias lg="lazygit"

alias ll="ls -alh"

# source /usr/share/nvm/init-nvm.sh

 # export NVM_DIR="$HOME/.nvm"
 #  [ -s "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh"  # This loads nvm
 #  [ -s "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

export TERM="kitty"

# zoxide
eval "$(zoxide init zsh)"

export DOWNGRADE_FROM_ALA=1

# replace cat with bat
# alias cat="bat"

export SSH_AUTH_SOCK=~/.1password/agent.sock

export EDITOR=nvim

export XDG_CONFIG_HOME="$HOME/.config"


alias info="info --vi-keys"

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_CTRL_T_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"
export FZF_CTRL_R_OPTS="
  --preview 'echo {}' --preview-window up:3:hidden:wrap
  --bind 'ctrl-/:toggle-preview'
  --bind 'ctrl-y:execute-silent(echo -n {2..} | xsel -ib)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"
export FZF_ALT_C_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'tree -C {}'"
  
# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --no-ignore --follow --exclude "node_modules|.git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
# _fzf_comprun() {
#   local command=$1
#   shift
#
#   case "$command" in
#     cd)           fzf --preview 'tree -C {} | head -200'   "$@" ;;
#     export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
#     ssh)          fzf --preview 'dig {}'                   "$@" ;;
#     *)            fzf --preview 'bat -n --color=always {}' "$@" ;;
#   esac
# }
# export FZF_DEFAULT_OPTS='--walker file,dir,follow,hidden'


# eval "$(register-python-argcomplete pipx)"


#
# # pnpm
# export PNPM_HOME="/home/pnpm/.local/share/pnpm"
# case ":$PATH:" in
#   *":$PNPM_HOME:"*) ;;
#   *) export PATH="$PNPM_HOME:$PATH" ;;
# esac
# # pnpm end


# Load Angular CLI autocompletion.
# source <(ng completion script)

alias z="zi"

alias rcp="rsync -a --info=progress2"

export PATH="$PATH:/home/solo/.local/bin"

# Flatpak dirs
export XDG_DATA_DIRS="$XDG_DATA_DIRS:/var/lib/flatpak/exports/share:/home/solo/.local/share/flatpak/exports/share"

# eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# QT
export QT_STYLE_OVERRIDE=kvantum
export QT_QPA_PLATFORMTHEME=qt6ct

# read man
man() { nvim -c "Man $1"; }
compdef _man man

# pnpm
export PNPM_HOME="/home/solo/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
alias db='distrobox'

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

export TMUX_TMPDIR="/var/tmp"

alias av='NVIM_APPNAME=astronvim nvim'
